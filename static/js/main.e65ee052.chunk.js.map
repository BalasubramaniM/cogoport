{"version":3,"sources":["middleware.js","reducers/common.js","reducer.js","constants/actionTypes.js","store.js","components/Home/index.js","components/App.js","index.js"],"names":["localStorageMiddleware","store","next","action","defaultState","appName","appLoaded","search_origin","search_destination","combineReducers","common","state","arguments","length","undefined","type","Object","objectSpread","router","routerReducer","history","createHistory","myRouterMiddleware","routerMiddleware","createStore","reducer","applyMiddleware","Home","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeOrigin","bind","assertThisInitialized","event","target","value","onChangeDestination","react_default","a","createElement","Fragment","className","placeholder","onKeyUp","onSearch","search","onKeyPress","onEnter","onChange","onChangeInput","React","Component","connect","dispatch","onLoad","App","components_Home","ReactDOM","render","lib","react_router_redux_es","Switch","Route","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.e65ee052.chunk.js","sourcesContent":["import { SEARCH_ORIGIN, SEARCH_DESTINATION } from \"./constants/actionTypes\";\n\n/**\n * Local Storage Middleware.\n * Check for data in local storage for similar API call\n * and return the response with the cached data.\n */\n\nconst localStorageMiddleware = store => next => action => {\n    // Implement caching response.\n    next(action);\n};\n\nexport { localStorageMiddleware };","import { APP_LOAD, SEARCH_ORIGIN, SEARCH_DESTINATION } from \"../constants/actionTypes\";\n\nconst defaultState = {\n    appName: \"Cogoport\",\n    appLoaded: false,\n    search_origin: \"\",\n    search_destination: \"\"\n};\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n        case APP_LOAD:\n            return {\n                ...state,\n                appLoaded: true\n            };\n        case SEARCH_ORIGIN:\n            return {\n                ...state,\n                search_origin: action.search_origin\n            };\n        case SEARCH_DESTINATION:\n            return {\n                ...state,\n                search_destination: action.search_destination\n            };\n        default:\n            return state;\n    }\n};\n","import common from \"./reducers/common\";\nimport { combineReducers } from \"redux\";\nimport { routerReducer } from \"react-router-redux\";\n\nexport default combineReducers({\n\tcommon,\n\trouter: routerReducer\n});\n","/**\n * Constants to handle Redux Store at one place.\n */\n\nexport const APP_LOAD = \"APP_LOAD\";\nexport const SEARCH_ORIGIN = \"SEARCH_ORIGIN\";\nexport const SEARCH_DESTINATION = \"SEARCH_DESTINATION\";\n","import { applyMiddleware, createStore } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport { localStorageMiddleware } from \"./middleware\";\nimport reducer from \"./reducer\";\n\nimport { routerMiddleware } from \"react-router-redux\";\nimport createHistory from \"history/createBrowserHistory\";\n\nexport const history = createHistory();\n\n// Build the middleware for intercepting and dispatching navigation actions\nconst myRouterMiddleware = routerMiddleware(history);\n\nconst getMiddleware = () => {\n\tif (process.env.NODE_ENV === \"production\") {\n\t\treturn applyMiddleware(myRouterMiddleware, localStorageMiddleware);\n\t} else {\n\t\t// Enable additional logging in non-production environments.\n\t\treturn applyMiddleware(\n\t\t\tmyRouterMiddleware,\n\t\t\tlocalStorageMiddleware,\n\t\t\tcreateLogger()\n\t\t);\n\t}\n};\n\nexport const store = createStore(reducer, getMiddleware());\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { SEARCH_ORIGIN, SEARCH_DESTINATION, APP_LOAD } from \"../../constants/actionTypes\";\n\nimport \"../../styles/variables.css\";\nimport \"../../styles/nav.css\";\nimport \"../../styles/styles.css\";\nimport \"../../styles/responsive.css\";\n\nconst mapStateToProps = state => ({\n\t...state.common\n});\n\nconst mapDispatchToProps = dispatch => ({\n\tonChangeOrigin: value => dispatch({ type: SEARCH_ORIGIN, value }),\n\tonChangeDestination: value => dispatch({ type: SEARCH_DESTINATION, value }),\n\tonLoad: () => dispatch({ type: APP_LOAD })\n});\n\nclass Home extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.onChangeOrigin = this.onChangeOrigin.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t}\n\n\tonChangeOrigin(event) {\n\t\tthis.props.onChangeOrigin(event.target.value);\n\t}\n\n\tonChangeDestination(event) {\n\t\tthis.props.onChangeDestination(event.target.value);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<nav>\n\t\t\t\t\t<div className='logo' />\n\t\t\t\t</nav>\n\t\t\t\t<section>\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p className=\"title\">\n\t\t\t\t\t\t\t\tExperience complete freight rate visibility.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p className='subtitle'>\n\t\t\t\t\t\t\t\tCompare freight rates instantly across any port pair with a detailed cost breakup.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<div className='grid-container'>\n\t\t\t\t\t\t\t\t<div className='flex-item'>\n\t\t\t\t\t\t\t\t\t<p className='selectbox-title'>ORIGIN PORT</p>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"input search\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Type here...\"\n\t\t\t\t\t\t\t\t\t\tonKeyUp={this.onSearch}\n\t\t\t\t\t\t\t\t\t\tvalue={this.props.search}\n\t\t\t\t\t\t\t\t\t\tonKeyPress={this.onEnter}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChangeInput}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='flex-item'>\n\t\t\t\t\t\t\t\t\t<p className='selectbox-title'>DESTINATION PORT</p>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"input search\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Type here...\"\n\t\t\t\t\t\t\t\t\t\tonKeyUp={this.onSearch}\n\t\t\t\t\t\t\t\t\t\tvalue={this.props.search}\n\t\t\t\t\t\t\t\t\t\tonKeyPress={this.onEnter}\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChangeInput}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(Home);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Home from \"../components/Home\";\n\nclass App extends React.Component {\n\trender() {\n\t\treturn <Home />;\n\t}\n}\n\nexport default connect(\n\tnull,\n\tnull\n)(App);\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport React from \"react\";\nimport { store, history } from \"./store\";\n\nimport { Route, Switch } from \"react-router-dom\";\nimport { ConnectedRouter } from \"react-router-redux\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<ConnectedRouter history={history}>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" component={App} />\n\t\t\t</Switch>\n\t\t</ConnectedRouter>\n\t</Provider>,\n\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}